@prefix cc:      <http://creativecommons.org/ns#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix fno:     <https://w3id.org/function/ontology#> .
@prefix foaf:    <http://xmlns.com/foaf/0.1/> .
@prefix grel:    <http://users.ugent.be/~bjdmeest/function/grel.ttl#> .
@prefix rdf:     <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:    <http://www.w3.org/2000/01/rdf-schema#> .
@prefix void:    <http://rdfs.org/ns/void#> .
@prefix xsd:     <http://www.w3.org/2001/XMLSchema#> .
@prefix idlab-fn: <http://example.com/idlab/function/> .
grel:void
    a                 void:DatasetDescription ;
    dcterms:title     "A VoID Description of the GREL Fno Descriptions Dataset" ;
    dcterms:creator   <https://ben.de-meester.org/#me> ;
    foaf:primaryTopic grel:dataset ;
.

<https://ben.de-meester.org/#me>
    rdf:type  foaf:Person ;
    foaf:mbox "mailto:Ben.DeMeester@UGent.be" ;
    foaf:name "Ben De Meester"@en .

grel:dataset
    a                    void:Dataset ;
    foaf:homepage        <https://github.com/OpenRefine/OpenRefine/wiki/General-Refine-Expression-Language> ;
    foaf:homepage        <https://fno.io> ;
    dcterms:title        "FnO descriptions for IDLab functions"@en ;
    dcterms:description  "The FnO descriptions of the IDLab functions" ;
    dcterms:contributor  <https://ben.de-meester.org/#me> ;
    dcterms:modified     "2020-06-16"^^xsd:date ;
    cc:license           <http://creativecommons.org/license/by/3.0/> ;
    dcterms:issued       "2016-12-15"^^xsd:date ;
    dcterms:rights       "Copyright © Ghent University – imec – IDLab"@en ;
    dcterms:subject      <http://dbpedia.org/resource/Function_(mathematics)> ;
    dcterms:subject      <http://dbpedia.org/resource/Function_model> ;
    void:feature         <http://www.w3.org/ns/formats/Turtle> ;
    void:exampleResource grel:boolean_and ;
    void:vocabulary      <https://w3id.org/function/ontology#> .

# Contents:
# - Parameters (per java) param_{var} with predicate p_{type}_{var}
# - Outputs (per java) output_{type} with predicate o_{type}
# - Problems (per java) prob_{var}
#   - Functions (per java)



grel:prob_ucase
    a                   fno:Problem ;
    fno:name            "The ucase problem"^^xsd:string ;
    dcterms:description "Converting a string to upper case characters."^^xsd:string .



idlab-fn:toUpperCaseURL
    a                   fno:Function ;
    fno:name            "toUppercaseURL" ;
    rdfs:label          "toUppercaseURL" ;
    dcterms:description "Returns an uppercase, valid url." ;
    fno:solves          grel:prob_ucase ;
    fno:expects         ( idlab-fn:_str ) ;
    fno:returns         ( idlab-fn:_stringOut ) .


idlab-fn:trueCondition
    a                   fno:Function ;
    fno:name            "True condition" ;
    rdfs:label          "True condition" ;
    dcterms:description "Returns the value if the given boolean is true, else null" ;
    fno:expects         ( idlab-fn:_strBoolean idlab-fn:_str ) ;
    fno:returns         ( idlab-fn:_stringOut ) .

idlab-fn:equal
    a                   fno:Function ;
    fno:name            "equal" ;
    rdfs:label          "equal" ;
    dcterms:description "Returns true if strings are equal." ;
    fno:expects         ( grel:valueParam grel:valueParam2 ) ;
    fno:returns         ( grel:stringOut ) .

idlab-fn:notEqual
    a                   fno:Function ;
    fno:name            "not equal" ;
    rdfs:label          "not equal" ;
    dcterms:description "Returns true if strings are not equal." ;
    fno:expects         ( grel:valueParam grel:valueParam2 ) ;
    fno:returns         ( grel:stringOut ) .

idlab-fn:stringContainsOtherString
    a                   fno:Function ;
    fno:name            "stringContainsOtherString" ;
    rdfs:label          "stringContainsOtherString" ;
    dcterms:description "Returns true if a string is found in a delimited string." ;
    fno:expects         ( idlab-fn:_str idlab-fn:_otherStr idlab-fn:_delimiter ) ;
    fno:returns         ( idlab-fn:_stringOut ) .



idlab-fn:random
    a                   fno:Function ;
    fno:name            "random" ;
    rdfs:label          "random" ;
    dcterms:description "Returns a random uuid." ;
    fno:expects         ( ) ;
    fno:returns         ( idlab-fn:_stringOut ) .

idlab-fn:_path
    a             fno:Parameter ;
    fno:name      "input path" ;
    rdfs:label    "input path" ;
    fno:type      xsd:string ;
    fno:predicate idlab-fn:path .

idlab-fn:_str
    a             fno:Parameter ;
    fno:name      "input string" ;
    rdfs:label    "input string" ;
    fno:type      xsd:string ;
    fno:predicate idlab-fn:str .

idlab-fn:_strBoolean
    a             fno:Parameter ;
    fno:name      "boolean encoded as string" ;
    rdfs:label    "boolean encoded as string" ;
    fno:type      xsd:string ;
    fno:predicate idlab-fn:strBoolean .

idlab-fn:_endpoint
    a             fno:Parameter ;
    fno:name      "endpoint url string" ;
    rdfs:label    "endpoint url string" ;
    fno:type      xsd:string ;
    fno:predicate idlab-fn:endpoint .

idlab-fn:_otherStr
    a             fno:Parameter ;
    fno:name      "other input string" ;
    rdfs:label    "other input string" ;
    fno:type      xsd:string ;
    fno:predicate idlab-fn:otherStr .

idlab-fn:_expectedStr
    a             fno:Parameter ;
    fno:name      "expected input string" ;
    rdfs:label    "expected input string" ;
    fno:type      xsd:string ;
    fno:predicate idlab-fn:expectedStr .

idlab-fn:_result
    a             fno:Parameter ;
    fno:name      "result string" ;
    rdfs:label    "result string" ;
    fno:type      xsd:string ;
    fno:predicate idlab-fn:result .

idlab-fn:_list
    a             fno:Parameter ;
    fno:name      "list" ;
    rdfs:label    "list" ;
    fno:type      rdf:List ;
    fno:predicate idlab-fn:list .

idlab-fn:_listOut
    a             fno:Parameter ;
    fno:name      "output list" ;
    rdfs:label    "output list" ;
    fno:type      rdf:List ;
    fno:predicate idlab-fn:listOut .

idlab-fn:_delimiter
    a             fno:Parameter ;
    fno:name      "delimiter" ;
    rdfs:label    "delimiter" ;
    fno:type      xsd:string ;
    fno:predicate idlab-fn:delimiter .

idlab-fn:_test
    a             fno:Parameter ;
    fno:name      "test" ;
    rdfs:label    "test" ;
    fno:type      xsd:double ;
    fno:predicate idlab-fn:p_test .

idlab-fn:_from
    a             fno:Parameter ;
    fno:name      "from" ;
    rdfs:label    "from" ;
    fno:type      xsd:double ;
    fno:predicate idlab-fn:p_from .

idlab-fn:_to
    a             fno:Parameter ;
    fno:name      "to" ;
    rdfs:label    "to" ;
    fno:type      xsd:double ;
    fno:predicate idlab-fn:p_to .

idlab-fn:_stringOut
    a             fno:Output ;
    fno:name      "output string" ;
    rdfs:label    "output string" ;
    fno:type      xsd:string ;
    fno:predicate idlab-fn:stringOut .

idlab-fn:_boolOut
    a             fno:Output ;
    fno:name      "output boolean" ;
    rdfs:label    "output boolean" ;
    fno:type      xsd:boolean ;
    fno:predicate idlab-fn:o_boolOut .
